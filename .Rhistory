ztestpv
ztestpv <- ((mean(mpg6) - mean(mpg8)) - 0) / pool_sd*(((length(mpg6)^-1) + (length(mpg8)^-1))^2)
ztestpv
ztestpv <- ((mean(mpg6) - mean(mpg8)) - 0) / pool_sd*(((length(mpg6)^-1) + (length(mpg8)^-1)^2)
ztestpv <- ((mean(mpg6) - mean(mpg8)) - 0) / pool_sd*(((length(mpg6)^-1) + (length(mpg8)^-1)^2))
ztestpv <- ((mean(mpg6) - mean(mpg8)) - 0) / pool_sd*(((length(mpg6)^-1) + (length(mpg8)^-1)^2))
ztestpv
nsq <- ((1/length(mpg6)) + (1/length(mpg8)))^2
nsq
ztestpv <- ((mean(mpg6) - mean(mpg8)) - 0) / pool_sd*nsq
ztestpv
pool_sd*nsq
ztestpv <- ((mean(mpg6) - mean(mpg8)) - 0) / (pool_sd*nsq)
ztestpv
nsq <- ((1/length(mpg6)) + (1/length(mpg8)))^0.5
pool_sd <- sqrt((((length(mpg6)-1)*(sd(mpg6)^2)) +  ((length(mpg8)-1)*(sd(mpg8)^2))) / (length(mpg6) + length(mpg8) -2))
ztestpv <- ((mean(mpg6) - mean(mpg8)) - 0) / (pool_sd*nsq)
ztestpv
pnorm(ztestpv, lower.tail = FALSE)
t.test(mpg6, mpg8, alternative = "two.sided", paired = FALSE, var.equal = TRUE)$p.value
t.test(mpg6, mpg8, alternative = "two.sided", paired = FALSE, var.equal = TRUE)$p.value
t.test(mpg8, mpg6, alternative = "two.sided", paired = FALSE, var.equal = TRUE)$p.value
require(swirl)
swirl()
library(manipulate)
mu0 = 30
myplot <- function(sigma, mua, n, alpha){
g = ggplot(data.frame(mu = c(27, 36)), aes(x = mu))
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean = mu0, sd = sigma / sqrt(n)),
size = 2, col = "red")
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean = mua, sd = sigma / sqrt(n)),
size = 2, col = "blue")
xitc = mu0 + qnorm(1 - alpha) * sigma / sqrt(n)
g = g + geom_vline(xintercept=xitc, size = 3)
g
}
manipulate(
myplot(sigma, mua, n, alpha),
sigma = slider(1, 10, step = 1, initial = 4),
mua = slider(30, 35, step = 1, initial = 32),
n = slider(1, 50, step = 1, initial = 16),
alpha = slider(0.01, 0.1, step = 0.01, initial = 0.05)
)
library(manipulate)
library(ggplot2)
mu0 = 30
myplot <- function(sigma, mua, n, alpha){
g = ggplot(data.frame(mu = c(27, 36)), aes(x = mu))
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean = mu0, sd = sigma / sqrt(n)),
size = 2, col = "red")
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean = mua, sd = sigma / sqrt(n)),
size = 2, col = "blue")
xitc = mu0 + qnorm(1 - alpha) * sigma / sqrt(n)
g = g + geom_vline(xintercept=xitc, size = 3)
g
}
manipulate(
myplot(sigma, mua, n, alpha),
sigma = slider(1, 10, step = 1, initial = 4),
mua = slider(30, 35, step = 1, initial = 32),
n = slider(1, 50, step = 1, initial = 16),
alpha = slider(0.01, 0.1, step = 0.01, initial = 0.05)
)
alpha  <- 0.5
z <- qnorm(1 -alpha)
mu0 <- 10
mua <- 11
sd <- 4
n <- 100
pnorm(mu0 + z*sd/sqrt(n), mean = mua, sd = sd, lower.tail = FALSE)
sd <- .4
pnorm(mu0 + z*sd/sqrt(n), mean = mua, sd = sd, lower.tail = FALSE)
pnorm(mu0 + z*sd/sqrt(n), mean = mua, sd = sd/sqrt(n), lower.tail = FALSE)
sd <- 4
pnorm(mu0 + z*sd/sqrt(n), mean = mua, sd = sd/sqrt(n), lower.tail = FALSE)
sd <- 4
n <- 100
pnorm(mu0 + z*sd/sqrt(n), mean = mua, sd = sd/sqrt(n), lower.tail = FALSE)
alpha  <- 0.5
z <- qnorm(1 -alpha)
mu0 <- 10
mua <- 11
sd <- 4
n <- 100
pnorm(mu0 + z*sd/sqrt(n), mean = mua, sd = sd/sqrt(n), lower.tail = FALSE)
sd/sqrt(n)
z*sd/sqrt(n)
z
alpha  <- 0.5
qnorm(1 -alpha)
1 -alpha
alpha  <- 0.05
z <- qnorm(1 -alpha)
mu0 <- 10
mua <- 11
sd <- 4
n <- 100
pnorm(mu0 + z*sd/sqrt(n), mean = mua, sd = sd/sqrt(n), lower.tail = FALSE)
power.t.test(delta = mua - mu0, sd = sd, sig.level = alpha, power = .8, type = "one.sample", alternative = "one.sided")
sd <- .04
alpha <- .05
mu0 <- 0
mua <- .01
power.t.test(delta = mua - mu0, sd = sd, sig.level = alpha, power = .8, type = "one.sample", alternative = "one.sided")$n
?power
?power.
?power.z.test
?power.t.test
require(swirl)
swirl()
33/36
deck
View(deck)
4/52
((1/52)*5)*13
0
13/52
12/52
3/51
2/51
1.6*0.8/2
0.64
mypdf
integrate(f = mypdf, lower = 0, upper = 1.6)
play()
2^0.5
nxt()
sqrt(2)
0.997 * 0.001
(1-0.985)*(1-0.001)
0.000997/(0.000997+0.014985)
bye()
install.packages(nasaweather)
install.packages("nasaweather")
require(nasaweather)
?atmos
View(Atmos)
data(atmos)
View(Atmos)
atmos
View(Atmos)
View(atmos)
View(atmos)
year <- 1995
means <- atmos %>%
filter(year == year) %>%
group_by(long, lat) %>%
summarize(temp = mean(temp, na.rm = TRUE),
pressure = mean(pressure, na.rm = TRUE),
ozone = mean(ozone, na.rm = TRUE),
cloudlow = mean(cloudlow, na.rm = TRUE),
cloudmid = mean(cloudmid, na.rm = TRUE),
cloudhigh = mean(cloudhigh, na.rm = TRUE)) %>%
ungroup()
require(dplyr)
year <- 1995
means <- atmos %>%
filter(year == year) %>%
group_by(long, lat) %>%
summarize(temp = mean(temp, na.rm = TRUE),
pressure = mean(pressure, na.rm = TRUE),
ozone = mean(ozone, na.rm = TRUE),
cloudlow = mean(cloudlow, na.rm = TRUE),
cloudmid = mean(cloudmid, na.rm = TRUE),
cloudhigh = mean(cloudhigh, na.rm = TRUE)) %>%
ungroup()
View(means)
means <- atmos %>%
filter(year == year) %>%
group_by(long, lat) %>%
summarize(temp = mean(temp, na.rm = TRUE),
pressure = mean(pressure, na.rm = TRUE),
ozone = mean(ozone, na.rm = TRUE),
cloudlow = mean(cloudlow, na.rm = TRUE),
cloudmid = mean(cloudmid, na.rm = TRUE),
cloudhigh = mean(cloudhigh, na.rm = TRUE))
View(means)
means <- atmos %>%
filter(year == year) %>%
group_by(long, lat) %>%
summarize(temp = mean(temp, na.rm = TRUE),
pressure = mean(pressure, na.rm = TRUE),
ozone = mean(ozone, na.rm = TRUE),
cloudlow = mean(cloudlow, na.rm = TRUE),
cloudmid = mean(cloudmid, na.rm = TRUE),
cloudhigh = mean(cloudhigh, na.rm = TRUE)) %>%
ungroup()
# Change the model: base prediction only on 'temp'
mod <- lm(ozone ~ pressure + cloudlow, data = means)
# Generate a model summary and interpret the results
summary(mod)
mod <- lm(ozone ~ temp, data = means)
# Generate a model summary and interpret the results
summary(mod)
require(swirl)
swirl()
require(swirl)
swirl()
(1:6)*(1/6)
sum((1:6)*(1/6))
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
edh
(edh+edl)/2
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
dice_sqr
sum(dice_sqr * dice_fair)
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5^2
dice
sum(dice_sqrd * dice_high) - edh^2
sum(dice_sqr * dice_high) - edh^2
require(swirl)
swirl()
sd(apply(matrix(rnorm(10000),1000),1,mean))
play()
rnorm(10000)
nxt()
play()
matrix(rnorm(10000), 1000)
matrix(rnorm(10000), 1000, 10)
matrix(data = rnorm(10000), nrow = 1000, ncol = 10)
matrix(data = rnorm(10000), 10)
matrix(data = rnorm(10000), 1000)
a <- matrix(data = rnorm(10000), 1000)
a
View(a)
apply(matrix, 1, mean)
apply(a, 1, mean)
m <- apply(a, 1, mean)
sd(m)
nxt()
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
sd(apply(matrix(rpois(10000), 1000),1 mean))
sd(apply(matrix(rpois(10000), 1000),1, mean))
sd(apply(matrix(rpois(n = 10000, lambda = 4), 1000),1, mean))
2/sqrt(10)
sd(apply(matrix(rpois(n = 10000, lambda = 4), 1000),1, mean))
sqrt(0.25/10)
sqrt(.25)/sqrt(10)
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
require(swirl)
swirl()
require(swirl)
swirl()
pbinom(q = 2, size = 5, prob = .8, lower.tail = FALSE)
pbinom(q = 2, size = 5, prob = .8, lower.tail = FALSE)
qnorm(p = 0.1, mean = 0, sd = 1, lower.tail = TRUE)
0
qnorm(p = 2.5, mean = 3, sd = 4, lower.tail = FALSE)
qnorm(p = 0.025, mean = 3, sd = 4, lower.tail = FALSE)
qnorm(p = 0.025, mean = 3, sd = 2, lower.tail = FALSE)
qnorm(.975,mean=3,sd=2)
1.96 * 2 + 3
pnorm(q = 1200, mean = 1020, sd = 50, lower.tail = FALSE)
pnorm(q = (1020-1200)/50, lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(p = 0.75, mean = 1020, sd = 50, lower.tail = TRUE)
.53
.53
rpois(n = 3, lambda = 2.5*4)
ppois(3,2.5 * 4)
pbinom(q = 5, size = 1000, prob = 0.01)
ppois(q = 5, lambda = 1000 * 0.01)
require(swirl)
swirl()
coinPlot(10)
coinPlot(10000)
qnorm(p = 0.95)
0.6 + c(1, -1) * qnorm(0.975) * sqrt(0.6(1-0.6)/100)
0.6 + c(1, -1) * qnorm(0.975) * sqrt(0.6 * (1-0.6) / 100)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
play()
1/2/3
1/(2*3)
nxt()
x$conf.int
binom.test(x = 60, n = 100, p = 0.6, alternative = "two.sided", conf.level = 0.95)$conf.int
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1, 1) * qnorm(.975) * sqrt(lamb/94.32)
poisson.test(x = 5, T = 94.32)$conf.int
poisson.test(x = 5, T = 94.32)$conf
require(swirl)
swirl()
require(swirl)
swirl()
myplot(2)
myplot(20)
myplot(2)
myplot2(2)
play()
myplot2
qt(p = 0.975, df = 2)
nxt()
qt(p = 0.975, df = 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g1 - g2
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1, 1) * qt(p = 0.975, df = 9, lower.tail = TRUE) * s/sqrt(10)
t.test(x = difference)$conf.int
play()
?I
?relevel
sleep
class(group)
class(sleep$group)
str(sleep$group)
relevel(sleep$group, 2)
class(relevel(sleep$group, 2))
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
require(usingR)
require(UsingR)
data(father.son)
a <- data(father.son)
a
a
View(a)
data(father.son)
data("father.son")
View(father.son)
g <- ggplot(data = father.son, aes(x = fheight)) + geom_density()
g
g <- ggplot(data = father.son, aes(x = fheight)) + geom_density(colour = "blue")
g
g <- ggplot(data = father.son, aes(x = fheight, y=sheight)) + geom_density(colour = "blue")
g
g <- ggplot(data = father.son, aes(x = fheight, y = sheight)) + geom_density(colour = "blue")
g
nxt()
7 * (15.34)^2 + 20 * (18.23)^2
sp <- 7*15.34^2 + 20*18.23^2
ns <- 27
play()
ns
nxt()
sp <- sqsp/ns
sp <- sqrt(sp/ns)
(132.86 - 127.44) + c(-1, 1) * sp * sqrt(1/8 + 1/21)
(132.86 - 127.44) + c(-1, 1) * qt(.975, df = 27) * sp * sqrt(1/8 + 1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
View(sleep)
sp <- sqrt(((sd(g1)^2 * 9) + (sd(g2)^2 * 9))/18)/sqrt(1/9+1/9)
sp
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sp
play()
sqrt(var(g1) * 9 + var(g2) * 9) /18
sqrt((var(g1) * 9 + var(g2) * 9) /18)
nxt()
j
md + c(-1, 1) * qt(p = .975) * sp*sqrt(1/5)
md + c(-1, 1) * qt(p = .975, df = 18) * sp*sqrt(1/5)
t.test(x = g2, y = g1, paired = FALSE, var.equal = TRUE)$conf.int
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
lll
m <- 2-4
num <- (15.34^2/8 + 18.23^2/21)^2
h <- 0-9
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
k <- 8-9
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
require(swirl)
swirl()
require(swirl)
swirl()
32/10
10/10
32-30
(32-30)/(1/sqrt(16))
(32-30)/(10/sqrt(16))
15
qt(p = 0.975, df = )
qt(p = 0.975, df = 15)
qt(p = 0.95, df = 15)
dim(fs)
play()
d <- rnorm(1000)
x <- rnorm(1000)
x <- data.frame(rnorm(1000))
View(x)
x <- data.frame(d = rnorm(1000))
View(x)
ggplot(data = x, aes(x = d)) + geom_density()
ggplot(data = x, aes(x = d)) + geom_density2d()
ggplot(data = x, aes(x = d)) + geom_line()
ggplot(data = x, aes(x = d)) + geom_line()
View(x)
ggplot(data = x, aes(x = d)) + geom_density()
nxt()
View(fs)
t.test(x = sheight, y = fheight, paired = TRUE)
t.test(x = sheight, y = fheight, paired = TRUE, data = fs)
t.test(x = fs$fheight, y = fs$sheight, paired = TRUE)
.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
0.03515625
.035
8
pbinom(q = 6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 7, size = 8, prob = .5, lower.tail = FALSE) - pbinom(q = 6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 6, size = 8, prob = .5, lower.tail = FALSE) - pbinom(q = 7, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 7, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 1:7, size = 8, prob = .5, lower.tail = FALSE)
pvals <- pbinom(q = 0:7, size = 8, prob = .5, lower.tail = FALSE)
rbind(1:7, pvals)
rbind(1:8, pvals)
rbind(round(1:8, 1), pvals)
pvals <- pbinom(q = 0:7, size = 8, prob = .5, lower.tail = FALSE)
pvals
pvals <- pbinom(q = -1:7, size = 8, prob = .5, lower.tail = FALSE)
pvals
mybin
require(swirl)
swirl()
pt(q = 2.5, df = 15, lower.tail = FALSE)
qnorm(p = 0.95)
pnorm(q = 0.95)
qnorm(p = 0.95)
qnorm(p = 0.99)
pnorm(q = 2)
pnorm(q = 2, lower.tail = FALSE)
mybin
pbinom(q = 6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(q = 7, size = 8, prob = 0.5, lower.tail = TRUE)
ppois(q = 9, lambda = 5,lower.tail = FALSE)
require(dplyr)
require(ggplot2)
options(digits = 3)
require(datasets)
data(ToothGrowth)
ToothGrowth <- data(ToothGrowth)
ToothGrowth
data(ToothGrowth)
ToothGrowth
View(ToothGrowth)
?ToothGrowth
View(ToothGrowth)
require(dplyr)
require(ggplot2)
require(datasets)
require(tidyr)
options(digits = 3)
setwd("/Users/Americo/Documents/Education/Data_science/Coursera/Statinference/project/ass2_statinference")
data(ToothGrowth)
?ToothGrowth
head(ToothGrowth)
tail(ToothGrowth)
dim(ToothGrowth)
str(ToothGrowth)
myToothGrowth <- ToothGrowth
mydfs <- list()
j <- 1:10
for (i in 1:6) {
mydfs[[i]] <- myToothGrowth[j,]
names(mydfs[[i]]) <- c(paste("len", i), paste("supp", i),paste("dose", i))
j <- j + 10
}
myToothGrowth2 <- inner_join(mydfs[[1]], mydfs[[2]],mydfs[[3]],mydfs[[4]],mydfs[[5]],mydfs[[6]])
myToothGrowth2$pig_id <- 1:10
myToothGrowth2 <- inner_join(mydfs[[1]], mydfs[[2]],mydfs[[3]],mydfs[[4]],mydfs[[5]],mydfs[[6]])
for (i in 1:6) {
mydfs[[i]] <- myToothGrowth[j,]
names(mydfs[[i]]) <- c(paste("len", i), paste("supp", i),paste("dose", i))
j <- j + 10
}
myToothGrowth2 <- cbind(mydfs[[1]], mydfs[[2]],mydfs[[3]],mydfs[[4]],mydfs[[5]],mydfs[[6]])
myToothGrowth2$pig_id <- 1:10
View(myToothGrowth2)
for (i in 1:6) {
mydfs[[i]] <- myToothGrowth[j,]
names(mydfs[[i]]) <- c(paste("len", i), paste("supp", i),paste("dose", i))
j <- j + 10
}
mydfs
myToothGrowth <- ToothGrowth
myToothGrowth
mydfs <- list()
j <- 1:10
for (i in 1:6) {
mydfs[[i]] <- myToothGrowth[j,]
names(mydfs[[i]]) <- c(paste("len", i), paste("supp", i),paste("dose", i))
j <- j + 10
}
mydfs
myToothGrowth2 <- cbind(mydfs[[1]], mydfs[[2]],mydfs[[3]],mydfs[[4]],mydfs[[5]],mydfs[[6]])
myToothGrowth2$pig_id <- 1:10
View(myToothGrowth2)
