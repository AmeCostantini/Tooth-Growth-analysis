require(swirl)
swirl()
(1:6)*(1/6)
sum((1:6)*(1/6))
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
edh
(edh+edl)/2
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
dice_sqr
sum(dice_sqr * dice_fair)
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair - 3.5^2
dice
sum(dice_sqrd * dice_high) - edh^2
sum(dice_sqr * dice_high) - edh^2
require(swirl)
swirl()
sd(apply(matrix(rnorm(10000),1000),1,mean))
play()
rnorm(10000)
nxt()
play()
matrix(rnorm(10000), 1000)
matrix(rnorm(10000), 1000, 10)
matrix(data = rnorm(10000), nrow = 1000, ncol = 10)
matrix(data = rnorm(10000), 10)
matrix(data = rnorm(10000), 1000)
a <- matrix(data = rnorm(10000), 1000)
a
View(a)
apply(matrix, 1, mean)
apply(a, 1, mean)
m <- apply(a, 1, mean)
sd(m)
nxt()
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
sd(apply(matrix(rpois(10000), 1000),1 mean))
sd(apply(matrix(rpois(10000), 1000),1, mean))
sd(apply(matrix(rpois(n = 10000, lambda = 4), 1000),1, mean))
2/sqrt(10)
sd(apply(matrix(rpois(n = 10000, lambda = 4), 1000),1, mean))
sqrt(0.25/10)
sqrt(.25)/sqrt(10)
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
require(swirl)
swirl()
require(swirl)
swirl()
pbinom(q = 2, size = 5, prob = .8, lower.tail = FALSE)
pbinom(q = 2, size = 5, prob = .8, lower.tail = FALSE)
qnorm(p = 0.1, mean = 0, sd = 1, lower.tail = TRUE)
0
qnorm(p = 2.5, mean = 3, sd = 4, lower.tail = FALSE)
qnorm(p = 0.025, mean = 3, sd = 4, lower.tail = FALSE)
qnorm(p = 0.025, mean = 3, sd = 2, lower.tail = FALSE)
qnorm(.975,mean=3,sd=2)
1.96 * 2 + 3
pnorm(q = 1200, mean = 1020, sd = 50, lower.tail = FALSE)
pnorm(q = (1020-1200)/50, lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(p = 0.75, mean = 1020, sd = 50, lower.tail = TRUE)
.53
.53
rpois(n = 3, lambda = 2.5*4)
ppois(3,2.5 * 4)
pbinom(q = 5, size = 1000, prob = 0.01)
ppois(q = 5, lambda = 1000 * 0.01)
require(swirl)
swirl()
coinPlot(10)
coinPlot(10000)
qnorm(p = 0.95)
0.6 + c(1, -1) * qnorm(0.975) * sqrt(0.6(1-0.6)/100)
0.6 + c(1, -1) * qnorm(0.975) * sqrt(0.6 * (1-0.6) / 100)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
play()
1/2/3
1/(2*3)
nxt()
x$conf.int
binom.test(x = 60, n = 100, p = 0.6, alternative = "two.sided", conf.level = 0.95)$conf.int
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1, 1) * qnorm(.975) * sqrt(lamb/94.32)
poisson.test(x = 5, T = 94.32)$conf.int
poisson.test(x = 5, T = 94.32)$conf
require(swirl)
swirl()
require(swirl)
swirl()
myplot(2)
myplot(20)
myplot(2)
myplot2(2)
play()
myplot2
qt(p = 0.975, df = 2)
nxt()
qt(p = 0.975, df = 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g1 - g2
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1, 1) * qt(p = 0.975, df = 9, lower.tail = TRUE) * s/sqrt(10)
t.test(x = difference)$conf.int
play()
?I
?relevel
sleep
class(group)
class(sleep$group)
str(sleep$group)
relevel(sleep$group, 2)
class(relevel(sleep$group, 2))
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
require(usingR)
require(UsingR)
data(father.son)
a <- data(father.son)
a
a
View(a)
data(father.son)
data("father.son")
View(father.son)
g <- ggplot(data = father.son, aes(x = fheight)) + geom_density()
g
g <- ggplot(data = father.son, aes(x = fheight)) + geom_density(colour = "blue")
g
g <- ggplot(data = father.son, aes(x = fheight, y=sheight)) + geom_density(colour = "blue")
g
g <- ggplot(data = father.son, aes(x = fheight, y = sheight)) + geom_density(colour = "blue")
g
nxt()
7 * (15.34)^2 + 20 * (18.23)^2
sp <- 7*15.34^2 + 20*18.23^2
ns <- 27
play()
ns
nxt()
sp <- sqsp/ns
sp <- sqrt(sp/ns)
(132.86 - 127.44) + c(-1, 1) * sp * sqrt(1/8 + 1/21)
(132.86 - 127.44) + c(-1, 1) * qt(.975, df = 27) * sp * sqrt(1/8 + 1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
View(sleep)
sp <- sqrt(((sd(g1)^2 * 9) + (sd(g2)^2 * 9))/18)/sqrt(1/9+1/9)
sp
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sp
play()
sqrt(var(g1) * 9 + var(g2) * 9) /18
sqrt((var(g1) * 9 + var(g2) * 9) /18)
nxt()
j
md + c(-1, 1) * qt(p = .975) * sp*sqrt(1/5)
md + c(-1, 1) * qt(p = .975, df = 18) * sp*sqrt(1/5)
t.test(x = g2, y = g1, paired = FALSE, var.equal = TRUE)$conf.int
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
lll
m <- 2-4
num <- (15.34^2/8 + 18.23^2/21)^2
h <- 0-9
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
k <- 8-9
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
require(swirl)
swirl()
require(swirl)
swirl()
32/10
10/10
32-30
(32-30)/(1/sqrt(16))
(32-30)/(10/sqrt(16))
15
qt(p = 0.975, df = )
qt(p = 0.975, df = 15)
qt(p = 0.95, df = 15)
dim(fs)
play()
d <- rnorm(1000)
x <- rnorm(1000)
x <- data.frame(rnorm(1000))
View(x)
x <- data.frame(d = rnorm(1000))
View(x)
ggplot(data = x, aes(x = d)) + geom_density()
ggplot(data = x, aes(x = d)) + geom_density2d()
ggplot(data = x, aes(x = d)) + geom_line()
ggplot(data = x, aes(x = d)) + geom_line()
View(x)
ggplot(data = x, aes(x = d)) + geom_density()
nxt()
View(fs)
t.test(x = sheight, y = fheight, paired = TRUE)
t.test(x = sheight, y = fheight, paired = TRUE, data = fs)
t.test(x = fs$fheight, y = fs$sheight, paired = TRUE)
.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
0.03515625
.035
8
pbinom(q = 6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 7, size = 8, prob = .5, lower.tail = FALSE) - pbinom(q = 6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 6, size = 8, prob = .5, lower.tail = FALSE) - pbinom(q = 7, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 7, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 1:7, size = 8, prob = .5, lower.tail = FALSE)
pvals <- pbinom(q = 0:7, size = 8, prob = .5, lower.tail = FALSE)
rbind(1:7, pvals)
rbind(1:8, pvals)
rbind(round(1:8, 1), pvals)
pvals <- pbinom(q = 0:7, size = 8, prob = .5, lower.tail = FALSE)
pvals
pvals <- pbinom(q = -1:7, size = 8, prob = .5, lower.tail = FALSE)
pvals
mybin
require(swirl)
swirl()
pt(q = 2.5, df = 15, lower.tail = FALSE)
qnorm(p = 0.95)
pnorm(q = 0.95)
qnorm(p = 0.95)
qnorm(p = 0.99)
pnorm(q = 2)
pnorm(q = 2, lower.tail = FALSE)
mybin
pbinom(q = 6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(q = 7, size = 8, prob = 0.5, lower.tail = TRUE)
ppois(q = 9, lambda = 5,lower.tail = FALSE)
require(dplyr)
require(ggplot2)
options(digits = 3)
require(datasets)
data(ToothGrowth)
ToothGrowth <- data(ToothGrowth)
ToothGrowth
data(ToothGrowth)
ToothGrowth
View(ToothGrowth)
?ToothGrowth
View(ToothGrowth)
k <- 1000
xvals <- seq(-5, 5, length = k)
myplot <- function(df){
d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),
x = xvals,
dist = factor(rep(c("Normal", "T"), c(k,k))))
g <- ggplot(d, aes(x = x, y = y))
g <- g + geom_line(size = 2, aes(colour = dist))
g
}
manipulate(myplot(mu), mu = slider(1, 20, step = 1))
?manipulate
instal.packages("manipulate")
install.packages("manipulate")
require(manipulate)
pvals <- seq(.5, .99, by = .01)
myplot2 <- function(df){
d <- data.frame(n= qnorm(pvals),t=qt(pvals, df),
p = pvals)
g <- ggplot(d, aes(x= n, y = t))
g <- g + geom_abline(size = 2, col = "lightblue")
g <- g + geom_line(size = 2, col = "black")
g <- g + geom_vline(xintercept = qnorm(0.975))
g <- g + geom_hline(yintercept = qt(0.975, df))
g
}
manipulate(myplot2(df), df = slider(1, 20, step = 1))
require(ggplot2)
pvals <- seq(.5, .99, by = .01)
myplot2 <- function(df){
d <- data.frame(n= qnorm(pvals),t=qt(pvals, df),
p = pvals)
g <- ggplot(d, aes(x= n, y = t))
g <- g + geom_abline(size = 2, col = "lightblue")
g <- g + geom_line(size = 2, col = "black")
g <- g + geom_vline(xintercept = qnorm(0.975))
g <- g + geom_hline(yintercept = qt(0.975, df))
g
}
manipulate(myplot2(df), df = slider(1, 20, step = 1))
unlist(mydfs)
myToothGrowth <- ToothGrowth
mydfs <- list()
j <- 1:10
for (i in 1:6) {
mydfs[[i]] <- myToothGrowth[j,]
names(mydfs[[i]]) <- c(paste("len", i), paste("supp", i),paste("dose", i))
j <- j + 10
}
myToothGrowth2 <- cbind(mydfs[[1]], mydfs[[2]],mydfs[[3]],mydfs[[4]],mydfs[[5]],mydfs[[6]])
myToothGrowth2$pig_id <- 1:10
unlist(mydfs)
mydfs
sapply(mydfs, cbind)
mydfs
cbind(mydfs[[1:6]])
mydfs[[1:6]]
mydfs[[1]]
cbind_all(mydfs)
require(dplyr)
cbind_all(mydfs)
bind_cols(mydfs)
myToothGrowth2 <- bind_cols(mydfs)
myToothGrowth2$pig_id <- 1:10
View(myToothGrowth2)
tplot <- function(dof, tstat, conflev, twoside = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(twoside = TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, twoside = TRUE)
tplot(dof = 9, tstat = 2.3, conflev = 0.95, twoside)
tplot <- function(dof, tstat, conflev, twoside) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(twoside = TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, twoside = TRUE)
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two = TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, two = TRUE)
b <- 3
a <- ifelse(b = 3, 1, 2)
a <- ifelse(b == 3, 1, 2)
a
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, two = TRUE)
require(ggplot)
require(ggplot2)
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, two = TRUE)
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", "blue"), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, two = TRUE)
tplot(dof = 9, tstat = 1.2, conflev = 0.95, two = TRUE)
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", "blue"), size = 0.9) +
ggtitle(paste("Hypothesis testing for t =", tstat)
return(g1)
}
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", "blue"), size = 0.9) +
ggtitle(paste("Hypothesis testing for t =", tstat))
return(g1)
}
tplot(dof = 9, tstat = 1.2, conflev = 0.95, two = TRUE)
toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "VC", doseup = "2", dosedown = "1")
setwd("/Users/Americo/Documents/Education/Data_science/Coursera/Statinference/project/ass2_statinference")
require(dplyr)
require(ggplot2)
require(datasets)
require(tidyr)
require(grid)
require(gridExtra)
data(ToothGrowth)
head(ToothGrowth)
tail(ToothGrowth)
dim(ToothGrowth)
str(ToothGrowth)
myToothGrowth <- ToothGrowth
ggplot(data = myToothGrowth, aes(x = supp, fill = factor(dose))) +
geom_bar(width = 0.5) +
guides(fill=guide_legend(reverse=TRUE)) +
ggtitle("distribution of doses and delivery methods")
ggplot(data = myToothGrowth, aes(x = len)) +
geom_histogram(binwidth = 1, colour = "black", fill = "gray") +
ggtitle("Histogram of teeth length")
ggplot(data = myToothGrowth, aes(x = factor(dose), y = len)) +
geom_boxplot() +
facet_wrap(~supp) +
ggtitle("Boxplot of teeth length")
mydfs <- list()
j <- 1:10
for (i in 1:6) {
mydfs[[i]] <- myToothGrowth[j,]
names(mydfs[[i]]) <- c(paste("len", i), paste("supp", i),paste("dose", i))
j <- j + 10
}
myToothGrowth2 <- bind_cols(mydfs)
myToothGrowth2$pig_id <- 1:10
#renaming variables to have a smaller dataframe
myToothGrowth3 <- myToothGrowth2[, seq(1, 19, 3)]
names(myToothGrowth3)  <- c("lenVC_05", "lenVC_1", "lenVC_2", "lenOJ_05", "lenOJ_1", "lenOJ_2", "pig_id")
head(myToothGrowth3)
myToothGrowth_diff <- data.frame (
lenVC_1_05 = myToothGrowth3$lenVC_1 - myToothGrowth3$lenVC_05,
lenVC_2_1 = myToothGrowth3$lenVC_2 - myToothGrowth3$lenVC_1,
lenVC_2_05 = myToothGrowth3$lenVC_2 - myToothGrowth3$lenVC_05,
lenOJ_1_05 = myToothGrowth3$lenOJ_1 - myToothGrowth3$lenOJ_05,
lenOJ_2_1 = myToothGrowth3$lenOJ_2 - myToothGrowth3$lenOJ_1,
lenOJ_2_05 = myToothGrowth3$lenOJ_2 - myToothGrowth3$lenOJ_05,
lenVC_OJ_05 = myToothGrowth3$lenOJ_05 - myToothGrowth3$lenVC_05,
lenVC_OJ_1 = myToothGrowth3$lenOJ_1 - myToothGrowth3$lenVC_1,
lenVC_OJ_2 = myToothGrowth3$lenOJ_2 - myToothGrowth3$lenVC_2)
head(myToothGrowth_diff)
toothnormalplot <- function(mydf, bin, supp, doseup, dosedown) {
mytitle <- sprintf("length difference between dose %s and %s given with %s", doseup, dosedown, supp)
mydf$myx <- eval(parse(text = sprintf("len%s_%s_%s", supp, doseup, dosedown)))
g1 <- ggplot(data = mydf, aes(x = myx)) +
geom_histogram(binwidth = bin, colour = "black", fill = "gray") +
ggtitle(label = mytitle) +
xlab(label = sprintf("len%s_%s_%s", supp, doseup, dosedown))
return(g1)
}
g1 <- toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "VC", doseup = "2", dosedown = "1")
toothnormalplot <- function(mydf, bin, supp, doseup, dosedown) {
attach(mydf)
mytitle <- sprintf("length difference between dose %s and %s given with %s", doseup, dosedown, supp)
mydf$myx <- eval(parse(text = sprintf("len%s_%s_%s", supp, doseup, dosedown)))
g1 <- ggplot(data = mydf, aes(x = myx)) +
geom_histogram(binwidth = bin, colour = "black", fill = "gray") +
ggtitle(label = mytitle) +
xlab(label = sprintf("len%s_%s_%s", supp, doseup, dosedown))
return(g1)
detach(mydf)
}
g1 <- toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "VC", doseup = "2", dosedown = "1")
g2 <- toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "VC", doseup = "1", dosedown = "05")
