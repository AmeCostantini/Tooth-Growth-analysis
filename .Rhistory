sp <- sqsp/ns
sp <- sqrt(sp/ns)
(132.86 - 127.44) + c(-1, 1) * sp * sqrt(1/8 + 1/21)
(132.86 - 127.44) + c(-1, 1) * qt(.975, df = 27) * sp * sqrt(1/8 + 1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
View(sleep)
sp <- sqrt(((sd(g1)^2 * 9) + (sd(g2)^2 * 9))/18)/sqrt(1/9+1/9)
sp
sp <- sqrt((9*var(g1)+9*var(g2))/18)
sp
play()
sqrt(var(g1) * 9 + var(g2) * 9) /18
sqrt((var(g1) * 9 + var(g2) * 9) /18)
nxt()
j
md + c(-1, 1) * qt(p = .975) * sp*sqrt(1/5)
md + c(-1, 1) * qt(p = .975, df = 18) * sp*sqrt(1/5)
t.test(x = g2, y = g1, paired = FALSE, var.equal = TRUE)$conf.int
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
lll
m <- 2-4
num <- (15.34^2/8 + 18.23^2/21)^2
h <- 0-9
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
k <- 8-9
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
require(swirl)
swirl()
require(swirl)
swirl()
32/10
10/10
32-30
(32-30)/(1/sqrt(16))
(32-30)/(10/sqrt(16))
15
qt(p = 0.975, df = )
qt(p = 0.975, df = 15)
qt(p = 0.95, df = 15)
dim(fs)
play()
d <- rnorm(1000)
x <- rnorm(1000)
x <- data.frame(rnorm(1000))
View(x)
x <- data.frame(d = rnorm(1000))
View(x)
ggplot(data = x, aes(x = d)) + geom_density()
ggplot(data = x, aes(x = d)) + geom_density2d()
ggplot(data = x, aes(x = d)) + geom_line()
ggplot(data = x, aes(x = d)) + geom_line()
View(x)
ggplot(data = x, aes(x = d)) + geom_density()
nxt()
View(fs)
t.test(x = sheight, y = fheight, paired = TRUE)
t.test(x = sheight, y = fheight, paired = TRUE, data = fs)
t.test(x = fs$fheight, y = fs$sheight, paired = TRUE)
.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
0.03515625
.035
8
pbinom(q = 6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 7, size = 8, prob = .5, lower.tail = FALSE) - pbinom(q = 6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 6, size = 8, prob = .5, lower.tail = FALSE) - pbinom(q = 7, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 7, size = 8, prob = .5, lower.tail = FALSE)
pbinom(q = 1:7, size = 8, prob = .5, lower.tail = FALSE)
pvals <- pbinom(q = 0:7, size = 8, prob = .5, lower.tail = FALSE)
rbind(1:7, pvals)
rbind(1:8, pvals)
rbind(round(1:8, 1), pvals)
pvals <- pbinom(q = 0:7, size = 8, prob = .5, lower.tail = FALSE)
pvals
pvals <- pbinom(q = -1:7, size = 8, prob = .5, lower.tail = FALSE)
pvals
mybin
require(swirl)
swirl()
pt(q = 2.5, df = 15, lower.tail = FALSE)
qnorm(p = 0.95)
pnorm(q = 0.95)
qnorm(p = 0.95)
qnorm(p = 0.99)
pnorm(q = 2)
pnorm(q = 2, lower.tail = FALSE)
mybin
pbinom(q = 6, size = 8, prob = 0.5, lower.tail = FALSE)
pbinom(q = 7, size = 8, prob = 0.5, lower.tail = TRUE)
ppois(q = 9, lambda = 5,lower.tail = FALSE)
require(dplyr)
require(ggplot2)
options(digits = 3)
require(datasets)
data(ToothGrowth)
ToothGrowth <- data(ToothGrowth)
ToothGrowth
data(ToothGrowth)
ToothGrowth
View(ToothGrowth)
?ToothGrowth
View(ToothGrowth)
k <- 1000
xvals <- seq(-5, 5, length = k)
myplot <- function(df){
d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),
x = xvals,
dist = factor(rep(c("Normal", "T"), c(k,k))))
g <- ggplot(d, aes(x = x, y = y))
g <- g + geom_line(size = 2, aes(colour = dist))
g
}
manipulate(myplot(mu), mu = slider(1, 20, step = 1))
?manipulate
instal.packages("manipulate")
install.packages("manipulate")
require(manipulate)
pvals <- seq(.5, .99, by = .01)
myplot2 <- function(df){
d <- data.frame(n= qnorm(pvals),t=qt(pvals, df),
p = pvals)
g <- ggplot(d, aes(x= n, y = t))
g <- g + geom_abline(size = 2, col = "lightblue")
g <- g + geom_line(size = 2, col = "black")
g <- g + geom_vline(xintercept = qnorm(0.975))
g <- g + geom_hline(yintercept = qt(0.975, df))
g
}
manipulate(myplot2(df), df = slider(1, 20, step = 1))
require(ggplot2)
pvals <- seq(.5, .99, by = .01)
myplot2 <- function(df){
d <- data.frame(n= qnorm(pvals),t=qt(pvals, df),
p = pvals)
g <- ggplot(d, aes(x= n, y = t))
g <- g + geom_abline(size = 2, col = "lightblue")
g <- g + geom_line(size = 2, col = "black")
g <- g + geom_vline(xintercept = qnorm(0.975))
g <- g + geom_hline(yintercept = qt(0.975, df))
g
}
manipulate(myplot2(df), df = slider(1, 20, step = 1))
unlist(mydfs)
myToothGrowth <- ToothGrowth
mydfs <- list()
j <- 1:10
for (i in 1:6) {
mydfs[[i]] <- myToothGrowth[j,]
names(mydfs[[i]]) <- c(paste("len", i), paste("supp", i),paste("dose", i))
j <- j + 10
}
myToothGrowth2 <- cbind(mydfs[[1]], mydfs[[2]],mydfs[[3]],mydfs[[4]],mydfs[[5]],mydfs[[6]])
myToothGrowth2$pig_id <- 1:10
unlist(mydfs)
mydfs
sapply(mydfs, cbind)
mydfs
cbind(mydfs[[1:6]])
mydfs[[1:6]]
mydfs[[1]]
cbind_all(mydfs)
require(dplyr)
cbind_all(mydfs)
bind_cols(mydfs)
myToothGrowth2 <- bind_cols(mydfs)
myToothGrowth2$pig_id <- 1:10
View(myToothGrowth2)
tplot <- function(dof, tstat, conflev, twoside = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(twoside = TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, twoside = TRUE)
tplot(dof = 9, tstat = 2.3, conflev = 0.95, twoside)
tplot <- function(dof, tstat, conflev, twoside) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(twoside = TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, twoside = TRUE)
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two = TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, two = TRUE)
b <- 3
a <- ifelse(b = 3, 1, 2)
a <- ifelse(b == 3, 1, 2)
a
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, two = TRUE)
require(ggplot)
require(ggplot2)
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", blue), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, two = TRUE)
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", "blue"), size = 0.9)
return(g1)
}
tplot(dof = 9, tstat = 2.3, conflev = 0.95, two = TRUE)
tplot(dof = 9, tstat = 1.2, conflev = 0.95, two = TRUE)
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", "blue"), size = 0.9) +
ggtitle(paste("Hypothesis testing for t =", tstat)
return(g1)
}
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", "blue"), size = 0.9) +
ggtitle(paste("Hypothesis testing for t =", tstat))
return(g1)
}
tplot(dof = 9, tstat = 1.2, conflev = 0.95, two = TRUE)
setwd("/Users/Americo/Documents/Education/Data_science/Coursera/Statinference/project/ass2_statinference")
require(dplyr)
require(ggplot2)
require(datasets)
require(tidyr)
require(grid)
require(gridExtra)
data(ToothGrowth)
head(ToothGrowth)
tail(ToothGrowth)
dim(ToothGrowth)
str(ToothGrowth)
myToothGrowth <- ToothGrowth
mydfs <- list()
j <- 1:10
for (i in 1:6) {
mydfs[[i]] <- myToothGrowth[j,]
names(mydfs[[i]]) <- c(paste("len", i), paste("supp", i),paste("dose", i))
j <- j + 10
}
myToothGrowth2 <- bind_cols(mydfs)
myToothGrowth2$pig_id <- 1:10
#renaming variables to have a smaller dataframe
myToothGrowth3 <- myToothGrowth2[, seq(1, 19, 3)]
names(myToothGrowth3)  <- c("lenVC_05", "lenVC_1", "lenVC_2", "lenOJ_05", "lenOJ_1", "lenOJ_2", "pig_id")
head(myToothGrowth3, n = 1)
myToothGrowth_diff <- data.frame (
lenVC_1_05 = myToothGrowth3$lenVC_1 - myToothGrowth3$lenVC_05,
lenVC_2_1 = myToothGrowth3$lenVC_2 - myToothGrowth3$lenVC_1,
lenVC_2_05 = myToothGrowth3$lenVC_2 - myToothGrowth3$lenVC_05,
lenOJ_1_05 = myToothGrowth3$lenOJ_1 - myToothGrowth3$lenOJ_05,
lenOJ_2_1 = myToothGrowth3$lenOJ_2 - myToothGrowth3$lenOJ_1,
lenOJ_2_05 = myToothGrowth3$lenOJ_2 - myToothGrowth3$lenOJ_05,
lenVC_OJ_05 = myToothGrowth3$lenOJ_05 - myToothGrowth3$lenVC_05,
lenVC_OJ_1 = myToothGrowth3$lenOJ_1 - myToothGrowth3$lenVC_1,
lenVC_OJ_2 = myToothGrowth3$lenOJ_2 - myToothGrowth3$lenVC_2)
toothnormalplot <- function(mydf, bin, supp, doseup, dosedown) {
attach(mydf)
mytitle <- sprintf("length difference between dose %s and %s given with %s", doseup, dosedown, supp)
mydf$myx <- eval(parse(text = sprintf("len%s_%s_%s", supp, doseup, dosedown)))
g1 <- ggplot(data = mydf, aes(x = myx)) +
geom_histogram(binwidth = bin, colour = "black", fill = "gray") +
ggtitle(label = mytitle) +
xlab(label = sprintf("len%s_%s_%s", supp, doseup, dosedown))
return(g1)
detach(mydf)
}
g1 <- toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "VC", doseup = "2", dosedown = "1")
g2 <- toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "VC", doseup = "1", dosedown = "05")
g3 <- toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "VC", doseup = "2", dosedown = "05")
g4 <- toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "OJ", doseup = "2", dosedown = "1")
g5 <- toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "OJ", doseup = "1", dosedown = "05")
g6 <- toothnormalplot(mydf = myToothGrowth_diff, bin = 3, supp = "OJ", doseup = "2", dosedown = "05")
toothnormalplotsd <- function(mydf, bin, suppup, suppdown, dose) {
attach(mydf)
mytitle <- sprintf("length difference between delivery method %s and delivery method %s for dose %s", suppup, suppdown, dose)
mydf$myxsd <- eval(parse(text = sprintf("len%s_%s_%s", suppdown, suppup, dose)))
g1 <- ggplot(data = mydf, aes(x = myxsd)) +
geom_histogram(binwidth = bin, colour = "black", fill = "gray") +
ggtitle(label = mytitle) +
xlab(label = sprintf("len%s_%s_%s", suppdown, suppup, dose))
return(g1)
detach(mydf)
}
gsd1 <- toothnormalplotsd(myToothGrowth_diff, 3, "OJ", "VC", "05")
gsd2 <- toothnormalplotsd(myToothGrowth_diff, 3, "OJ", "VC", "1")
gsd3 <- toothnormalplotsd(myToothGrowth_diff, 3, "OJ", "VC", "2")
tplot <- function(dof, tstat, conflev, two = TRUE) {
myx <- seq(-4, 4, length=100)
hx <- dnorm(myx)
degf <- dof
mydf <- data.frame (myx, myy = dt(myx, degf))
pcum <- ifelse(two == TRUE, conflev+((1-conflev)/2), conflev)
tcrit  <- qt(p = pcum, df = dof)
if (two == TRUE) {
g1 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(-tcrit, tcrit, tstat), colour = c("red", "red", "blue"), size = 0.9) +
ggtitle(paste("Hypothesis testing for t =", tstat ))
return(g1)
} else {
g2 <- ggplot(mydf, aes(myx, myy)) +
geom_line(size = 1.2, colour = "black") +
geom_vline(xintercept = c(tcrit, tstat), colour = c("red", "blue"), size = 0.9) +
ggtitle(paste("Hypothesis testing for t =", tstat ))
return(g2)
}
}
tVC_2_05 <- t.test(x = myToothGrowth3$lenVC_2, y = myToothGrowth3$lenVC_05, alternative = "greater", paired = TRUE, conf.level = 0.95)
tVC_2_1 <- t.test(x = myToothGrowth3$lenVC_2, y = myToothGrowth3$lenVC_1, alternative = "greater", paired = TRUE, conf.level = 0.95)
tVC_1_05 <- t.test(x = myToothGrowth3$lenVC_1, y = myToothGrowth3$lenVC_05, alternative = "greater", paired = TRUE, conf.level = 0.95)
tOJ_2_05 <- t.test(x = myToothGrowth3$lenOJ_2, y = myToothGrowth3$lenOJ_05, alternative = "greater", paired = TRUE, conf.level = 0.95)
tOJ_2_1 <- t.test(x = myToothGrowth3$lenOJ_2, y = myToothGrowth3$lenOJ_1, alternative = "greater", paired = TRUE, conf.level = 0.95)
tOJ_1_05 <- t.test(x = myToothGrowth3$lenOJ_1, y = myToothGrowth3$lenOJ_05, alternative = "greater", paired = TRUE, conf.level = 0.95)
p.value_test_same_method <-
c(
tVC_2_05 = tVC_2_05$p.value,
tVC_2_1 = tVC_2_1$p.value,
tVC_1_05 = tVC_1_05$p.value,
tOJ_2_05 = tOJ_2_05$p.value,
tOJ_2_1 = tOJ_2_1$p.value,
tOJ_1_05 = tOJ_1_05$p.value)
p.value_test_same_method
t_VC_OJ_2 <- t.test(x = myToothGrowth3$lenOJ_2, y = myToothGrowth3$lenVC_2, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
t_VC_OJ_1 <- t.test(x = myToothGrowth3$lenOJ_1, y = myToothGrowth3$lenVC_1, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
t_VC_OJ_05 <- t.test(x = myToothGrowth3$lenOJ_05, y = myToothGrowth3$lenVC_05, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
p.value_test_diff_method <-
c(
t_VC_OJ_2 = t_VC_OJ_2$p.value,
t_VC_OJ_1 = t_VC_OJ_1$p.value,
t_VC_OJ_05 = t_VC_OJ_05$p.value)
p.value_test_diff_method
ggplot(data = myToothGrowth, aes(x = supp, fill = factor(dose))) +
geom_bar(width = 0.5) +
guides(fill=guide_legend(reverse=TRUE)) +
ggtitle("distribution of doses and delivery methods")
ggplot(data = myToothGrowth, aes(x = len)) +
geom_histogram(binwidth = 1, colour = "black", fill = "gray") +
ggtitle("Histogram of teeth length")
ggplot(data = myToothGrowth, aes(x = factor(dose), y = len)) +
geom_boxplot() +
facet_wrap(~supp) +
ggtitle("Boxplot of teeth length")
grid.arrange(g1, g2, g3, g4, g5, g6, ncol = 2, main = "Differences of lengths for different doses of same delivery methods")
grid.arrange(gsd1, gsd2, gsd3, ncol = 1, main = "Differences of lengths for same dose of different delivery method")
tplot(dof = 9, tstat = tVC_2_05$statistic, conflev = 0.95, two = FALSE)
tVC_2_05.plot <- tplot(dof = 9, tstat = tVC_2_05$statistic, conflev = 0.95, two = FALSE)
tVC_2_1.plot <- tplot(dof = 9, tstat = tVC_2_1$statistic, conflev = 0.95, two = FALSE)
```
tOJ_2_05.plot <- tplot(dof = 9, tstat = tOJ_2_05$statistic, conflev = 0.95, two = FALSE)
tOJ_2_1.plot <- tplot(dof = 9, tstat = tOJ_2_1$statistic, conflev = 0.95, two = FALSE)
tplot(dof = 9, tstat = tOJ_1_05$statistic, conflev = 0.95, two = FALSE)
tOJ_1_05.plot <- tplot(dof = 9, tstat = tOJ_1_05$statistic, conflev = 0.95, two = FALSE)
t_VC_OJ_2 <- tplot(dof = 9, tstat = t_VC_OJ_2$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_1.plot <- tplot(dof = 9, tstat = t_VC_OJ_1$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_05 <- tplot(dof = 9, tstat = t_VC_OJ_05$statistic, conflev = 0.95, two = TRUE)
grid.arrange(tVC_2_05.plot, tVC_2_1.plot, tVC_1_05.plot, tOJ_2_05.plot, tOJ_2_1.plot, tOJ_1_05.plot, t_VC_OJ_2, t_VC_OJ_1,
t_VC_OJ_05, ncol = 3, main = "T TESTS")
tVC_1_05.plot <- tplot(dof = 9, tstat = tVC_1_05$statistic, conflev = 0.95, two = FALSE)
grid.arrange(tVC_2_05.plot, tVC_2_1.plot, tVC_1_05.plot, tOJ_2_05.plot, tOJ_2_1.plot, tOJ_1_05.plot, t_VC_OJ_2, t_VC_OJ_1,
t_VC_OJ_05, ncol = 3, main = "T TESTS")
tVC_2_05.plot
tVC_2_1.plot
tVC_1_05.plot
tOJ_2_05.plot
tOJ_2_1.plot
tOJ_1_05.plot
tVC_2_05.plot <- tplot(dof = 9, tstat = tVC_2_05$statistic, conflev = 0.95, two = FALSE)
tVC_2_1.plot <- tplot(dof = 9, tstat = tVC_2_1$statistic, conflev = 0.95, two = FALSE)
tVC_1_05.plot <- tplot(dof = 9, tstat = tVC_1_05$statistic, conflev = 0.95, two = FALSE)
tOJ_2_05.plot <- tplot(dof = 9, tstat = tOJ_2_05$statistic, conflev = 0.95, two = FALSE)
tOJ_2_1.plot <- tplot(dof = 9, tstat = tOJ_2_1$statistic, conflev = 0.95, two = FALSE)
tOJ_1_05.plot <- tplot(dof = 9, tstat = tOJ_1_05$statistic, conflev = 0.95, two = FALSE)
t_VC_OJ_2.plot <- tplot(dof = 9, tstat = t_VC_OJ_2$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_1.plot <- tplot(dof = 9, tstat = t_VC_OJ_1$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_05.plot <- tplot(dof = 9, tstat = t_VC_OJ_05$statistic, conflev = 0.95, two = TRUE)
grid.arrange(tVC_2_05.plot, tVC_2_1.plot, tVC_1_05.plot, tOJ_2_05.plot, tOJ_2_1.plot, tOJ_1_05.plot, t_VC_OJ_2.plot,
t_VC_OJ_1.plot, t_VC_OJ_05.plot, ncol = 3, main = "T TESTS")
tVC_2_05.plot <- tplot(dof = 9, tstat = tVC_2_05$statistic, conflev = 0.95, two = FALSE)
tVC_2_1.plot <- tplot(dof = 9, tstat = tVC_2_1$statistic, conflev = 0.95, two = FALSE)
tVC_1_05.plot <- tplot(dof = 9, tstat = tVC_1_05$statistic, conflev = 0.95, two = FALSE)
tOJ_2_05.plot <- tplot(dof = 9, tstat = tOJ_2_05$statistic, conflev = 0.95, two = FALSE)
tOJ_2_1.plot <- tplot(dof = 9, tstat = tOJ_2_1$statistic, conflev = 0.95, two = FALSE)
tOJ_1_05.plot <- tplot(dof = 9, tstat = tOJ_1_05$statistic, conflev = 0.95, two = FALSE)
t_VC_OJ_2.plot <- tplot(dof = 9, tstat = t_VC_OJ_2$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_1.plot <- tplot(dof = 9, tstat = t_VC_OJ_1$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_05.plot <- tplot(dof = 9, tstat = t_VC_OJ_05$statistic, conflev = 0.95, two = TRUE)
grid.arrange(tVC_2_05.plot, tVC_2_1.plot, tVC_1_05.plot, tOJ_2_05.plot, tOJ_2_1.plot, tOJ_1_05.plot, t_VC_OJ_2.plot,
t_VC_OJ_1.plot, t_VC_OJ_05.plot, ncol = 3, main = "T TESTS")
t_VC_OJ_05.plot
t_VC_OJ_1.plot
tVC_2_1.plot
tVC_1_05.plot
t_VC_OJ_05.plot
t_VC_OJ_05.plot <- tplot(dof = 9, tstat = t_VC_OJ_05$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_05.plot
t_VC_OJ_05$statistic
t_VC_OJ_05 = t_VC_OJ_05$p.value)
t_VC_OJ_05
t_VC_OJ_05
```
t_VC_OJ_05 <- t.test(x = myToothGrowth3$lenOJ_05, y = myToothGrowth3$lenVC_05, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
t_VC_OJ_05
t_VC_OJ_05
t_VC_OJ_05.plot <- tplot(dof = 9, tstat = t_VC_OJ_05$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_05.plot
t_VC_OJ_1.plot
t_VC_OJ_05.plot
grid.arrange(tVC_2_05.plot, tVC_2_1.plot, tVC_1_05.plot, tOJ_2_05.plot, tOJ_2_1.plot, tOJ_1_05.plot, t_VC_OJ_2.plot,
t_VC_OJ_1.plot, t_VC_OJ_05.plot, ncol = 3, main = "T TESTS")
t_VC_OJ_05.plot
tVC_2_05.plot
tVC_2_1.plot
tVC_1_05.plot
tOJ_2_05.plot
tOJ_2_1.plot
tOJ_1_05.plot
t_VC_OJ_2.plot
t_VC_OJ_2.plot <- tplot(dof = 9, tstat = t_VC_OJ_2$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_2.plot
t_VC_OJ_2
t_VC_OJ_2 <- t.test(x = myToothGrowth3$lenOJ_2, y = myToothGrowth3$lenVC_2, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
t_VC_OJ_1 <- t.test(x = myToothGrowth3$lenOJ_1, y = myToothGrowth3$lenVC_1, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
t_VC_OJ_2
p.value_test_diff_method <-
c(
t_VC_OJ_2 = t_VC_OJ_2$p.value,
t_VC_OJ_1 = t_VC_OJ_1$p.value,
t_VC_OJ_05 = t_VC_OJ_05$p.value)
p.value_test_diff_method
t_VC_OJ_2.plot <- tplot(dof = 9, tstat = t_VC_OJ_2$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_1.plot <- tplot(dof = 9, tstat = t_VC_OJ_1$statistic, conflev = 0.95, two = TRUE)
t_VC_OJ_2.plot
t_VC_OJ_1.plot
tOJ_1_05.plot
grid.arrange(tVC_2_05.plot, tVC_2_1.plot, tVC_1_05.plot, tOJ_2_05.plot, tOJ_2_1.plot, tOJ_1_05.plot, t_VC_OJ_2.plot,
t_VC_OJ_1.plot, t_VC_OJ_05.plot, ncol = 3, main = "T TESTS")
v1 <- c(140, 138, 150, 148, 135)
v2 <- c(132, 135, 151, 146, 130)
t.test(x = v1, y = v2, paired = TRUE, alternative = "less", conf.level = 0.95)$p.value
t.test(x = v1, y = v2, paired = TRUE, alternative = "less", conf.level = 0.95)
t.test(x = v1, y = v2, paired = TRUE, alternative = "two.sided", conf.level = 0.95)
t.test(x = v1, y = v2, paired = TRUE, alternative = "two.sided", conf.level = 0.95)$p.value
qt(p = 0.975, df = 8, lower.tail = TRUE)
t_crit <- c(-1, 1)*qt(p = 0.975, df = 8, lower.tail = TRUE)
t_crit
mu_null_v <- 1100 - t_crit*(30/sqrt(9))
mu_null_v
pbinom(q = 2, size = 4, prob = 0.5, lower.tail = FALSE)
